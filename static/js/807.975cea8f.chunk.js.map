{"version":3,"file":"static/js/807.975cea8f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","helpers/withRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Post_avatar__jYSGH\"};","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport avatar from '../../../../assets/images/avatar.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            <div>\r\n                <img className={styles.avatar} src={`${props.avatar ? props.avatar : avatar}`} alt='img'/>\r\n                <div>\r\n                    <span>\r\n                        {props.likesCounter} likes\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__lP3jv\",\"textarea\":\"MyPosts_textarea__73qnP\",\"button_add\":\"MyPosts_button_add__m5CPr\"};","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport styles from './MyPosts.module.css';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { composeValidators, minLength, required } from '../../../helpers/validate';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const onSubmit = (values) => {\r\n        let text = values.newPostText;\r\n        props.addPost(text);\r\n    };\r\n\r\n    const postElements = props.profilePage.postsData\r\n    .map(postData => <Post key={postData.id} message={postData.message} likesCounter={postData.likes} avatar={props.profilePage.userProfile.photos.small}/>);\r\n\r\n    const NewPostArea = (props) => {\r\n        return (\r\n            <form className={styles.textarea} onSubmit={props.handleSubmit}>\r\n                <Field name=\"newPostText\" validate={composeValidators(required, minLength)}>\r\n                    {({input, meta}) => (\r\n                        <div>\r\n                            <textarea {...input} placeholder=\"Type your text...\"></textarea>\r\n                            {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n                <button className={styles.button_add} type=\"submit\">Add post</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const NewPostForm = () => {\r\n        return (\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit }) => (\r\n                    <NewPostArea handleSubmit={handleSubmit}/>\r\n                )}\r\n            >\r\n            </Form>\r\n        )\r\n    };\r\n    \r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <h3>My posts</h3>\r\n            <NewPostForm/>\r\n            {postElements}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profilePageReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"ProfileInfo_banner__KyBEG\",\"profileDescr\":\"ProfileInfo_profileDescr__IueFF\",\"list\":\"ProfileInfo_list__B2S+R\",\"listItem\":\"ProfileInfo_listItem__5Jymm\",\"listItemName\":\"ProfileInfo_listItemName__WEdXL\",\"avatar\":\"ProfileInfo_avatar__tsdjT\",\"status\":\"ProfileInfo_status__F4F2I\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <span \r\n            className={styles.status}\r\n            onDoubleClick={activateEditMode}\r\n            >\r\n                {props.status || 'Here can be user status...'}\r\n            </span>\r\n            }\r\n            {editMode &&\r\n                <input \r\n                onChange={onStatusChange}\r\n                onBlur={deactivateEditMode}\r\n                autoFocus type=\"text\" \r\n                value={status}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport avatar from '../../../assets/images/avatar.jpg';\r\nimport ProfileStatus from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <img className={styles.banner} src={`https://png.pngtree.com/thumb_back/fh260/back_our/20190628/ourmid/pngtree-blue-house-civilization-city-banner-background-material-image_269026.jpg`} alt='img' />\r\n            <div className={styles.profileDescr}>\r\n                <img className={props.profileData.lookingForAJob ? styles.avatar + ' ' + styles.avatarLFJ : styles.avatar} src={props.profileData.photos.large ? props.profileData.photos.large : avatar} alt=\"Avatar\" />\r\n                <div className={styles.profileInfo}>\r\n                    <ul className={styles.list}>\r\n                        <li className={styles.listItem + ' ' + styles.listItemName}>\r\n                            {props.profileData.fullName}\r\n                        </li>\r\n                        <li className={styles.listItem}>\r\n                            <span>Job status:</span> \r\n                            <span>{props.profileData.lookingForAJob ? 'Looking for a job!' : 'Employed'}</span>\r\n                        </li>\r\n                        <li className={styles.listItem}>\r\n                            <span>Job status description:</span>\r\n                            <span>{props.profileData.lookingForAJobDescription}</span>\r\n                        </li>\r\n                        <li className={styles.listItem}>\r\n                            <span>About me:</span>\r\n                            <ProfileStatus \r\n                            status={props.status}\r\n                            getStatus={props.getStatus}\r\n                            updateStatus={props.updateStatus}\r\n                            aboutMe={props.profileData.aboutMe}/>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"profileWrapper\":\"Profile_profileWrapper__9MO1t\"};","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport styles from './Profile.module.css';\r\nimport Loader from '../common/Loader/Loader';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.userProfileData) {\r\n        return <Loader/>\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n            <ProfileInfo profileData={props.userProfileData} \r\n            status={props.status}\r\n            getStatus={props.getStatusTC}\r\n            updateStatus={props.updateStatusTC}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfileTC, getStatusTC, updateStatusTC} from '../../redux/profilePageReducer';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport withRouter from '../../helpers/withRouter';\r\n\r\nclass ProfileAPIContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let profileId = this.props.router.params['*'];\r\n        if(!profileId) {\r\n            profileId = this.props.autorizedUserId;\r\n            if(!profileId) {\r\n                return;\r\n            }\r\n        }\r\n        this.props.getUserProfileTC(profileId);\r\n        this.props.getStatusTC(profileId);\r\n    }\r\n\r\n    render () {\r\n        if(!this.props.router.params['*'] && !this.props.autorizedUserId) {\r\n            return <Navigate to=\"/login\"/>\r\n        }\r\n        return (\r\n            <Profile {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userProfileData: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        autorizedUserId: state.userAuth.id,\r\n        isAuth: state.userAuth.isAuthd\r\n    }\r\n};\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC}),\r\n    withRouter\r\n)(ProfileAPIContainer);","// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\n\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\nexport default function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}"],"names":["props","className","styles","src","avatar","alt","likesCounter","message","React","onSubmit","values","text","newPostText","addPost","postElements","profilePage","postsData","map","postData","likes","userProfile","photos","small","id","NewPostArea","handleSubmit","name","validate","composeValidators","required","minLength","input","meta","placeholder","error","touched","type","NewPostForm","render","connect","state","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","onBlur","updateStatus","autoFocus","profileData","lookingForAJob","large","fullName","lookingForAJobDescription","getStatus","aboutMe","userProfileData","getStatusTC","updateStatusTC","Loader","ProfileAPIContainer","profileId","this","router","params","autorizedUserId","getUserProfileTC","to","compose","userAuth","isAuth","isAuthd","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}